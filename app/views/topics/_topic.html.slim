article.to-process[
  id=topic_view.topic.id
  class=topic_view.container_classes.join(' ')
  data-appear_type='topic'
  data-appear_url=api_appears_url
  data-dynamic=topic_view.dynamic_type
  data-faye=topic_view.faye_channels.to_json
  data-generated=topic_view.generated?.to_json
  data-track_topic="#{JsExports::TopicsExport.instance.placeholder(topic_view.topic) unless local_assigns[:do_not_track]}"
  data-url=topic_view.url
  data-user_id=topic_view.user.id
  data-user_nickname=topic_view.user.nickname
  data-selection_boundary
  itemscope
  itemtype=(topic_view.topic_type_policy.critique_topic? ? 'http://schema.org/Critique' : 'http://schema.org/Article')
]
  meta itemprop='author' content=topic_view.topic.user.nickname
  meta itemprop='name' content=topic_view.topic.title
  meta itemprop='headline' content=topic_view.topic.title
  meta[
    itemprop='url'
    content=UrlGenerator.instance.topic_url(topic_view.topic)
  ]
  meta[
    itemscope
    itemprop='mainEntityOfPage'
    itemType='https://schema.org/WebPage'
    itemid=UrlGenerator.instance.topic_url(topic_view.topic)
  ]
  meta itemprop='dateCreated' content=topic_view.created_at.iso8601
  meta itemprop='datePublished' content=topic_view.created_at.iso8601
  - if topic_view.updated_at
    meta itemprop='dateModified' content=topic_view.updated_at.iso8601

  a name="topic-#{topic_view.topic.id}"

  - if topic_view.is_a? Topics::NewsWallView
    = render 'topics/news_wall/inner', topic_view: topic_view
  - elsif topic_view.is_a? Topics::NewsLineView
    = render 'topics/news_line/inner', topic_view: topic_view
  - elsif topic_view.topic_type_policy.review_topic? && topic_view.review_author_details?
    = render 'topics/reviews/inner', topic_view: topic_view
  - elsif topic_view.show_inner?
    = render 'topics/inner', topic_view: topic_view

  - if topic_view.show_moderation?
    .resources-loader.to-process.b-ajax[
      data-dynamic='postloaded'
      data-postloaded-url=topic_moderation_url(topic_view.topic)
    ]

  - if topic_view.show_comments?
    = render 'topics/comments',
      comments_view: topic_view.comments_view,
      commentable: topic_view.topic,
      headline: (i18n_io('Comment', :few) if topic_view.show_comments_headline?)
