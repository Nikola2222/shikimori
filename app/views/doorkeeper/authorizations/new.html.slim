- unless Rails.env.test?
  = javascript_pack_tag 'standalone'
  / = javascript_pack_tag 'vendors'

- application = @pre_auth.client.application.becomes OauthApplication

header.head
  h1 = t '.title'
  h2 == t '.prompt', client_name: link_to("@#{current_user.nickname}", profile_url(current_user))

.block
  center
    = render application

.block
  .m5
    b = t 'doorkeeper.authorizations.new.able_to'
  ul.b-list.is-wide
    - @pre_auth.scopes.each do |scope|
      li
        label
          input[
            type='checkbox'
            style='vertical-align: middle'
            value=scope
            onchange='$("input[name=scope]").val($(this).closest(".b-list").find("input:checked").toArray().map(function(node) { return node.value; }).join(" "));'
            checked
          ]
          span style='padding-left: 6px; vertical-align: middle'
            = t "doorkeeper.scopes.#{scope}"

/ - if @pre_auth.scopes.count > 0
  #oauth-permissions
    p
      = t('.able_to')
      | \:
    ul.text-info
      - @pre_auth.scopes.each do |scope|
        li= t scope, scope: [:doorkeeper, :scopes]

.actions
  = form_tag oauth_authorization_path, method: :post, class: 'authorize' do
    = hidden_field_tag :client_id, @pre_auth.client.uid
    = hidden_field_tag :redirect_uri, @pre_auth.redirect_uri
    = hidden_field_tag :state, @pre_auth.state
    = hidden_field_tag :response_type, @pre_auth.response_type
    = hidden_field_tag :scope, @pre_auth.scope
    = submit_tag t('doorkeeper.authorizations.buttons.authorize'),
      class: 'b-link_button light-green'

  = form_tag oauth_authorization_path, method: :delete, class: 'deny' do
    = hidden_field_tag :client_id, @pre_auth.client.uid
    = hidden_field_tag :redirect_uri, @pre_auth.redirect_uri
    = hidden_field_tag :state, @pre_auth.state
    = hidden_field_tag :response_type, @pre_auth.response_type
    = hidden_field_tag :scope, @pre_auth.scope
    = submit_tag t('doorkeeper.authorizations.buttons.deny'),
      class: 'b-link_button light-red'
