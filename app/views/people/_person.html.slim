- cover_by ||= :link
- cover_title ||= :present
- cover_derivative ||= :preview
- content_by ||= :tooltip

article.c-column.b-catalog_entry.c-person[
  class="entry-#{person.id} #{:cc if content_by == :block}"
  id=person.id
  itemscope
  itemtype='http://schema.org/Person'
]
  meta[
    itemprop='image'
    content=meta_image_url(person.image, :original, false)
  ]
  meta[
    itemprop='thumbnailUrl'
    content=meta_image_url(person.image, :x48, false)
  ]

  a.cover[
    class=('anime-tooltip' if content_by == :tooltip)
    href=person_url(person)
    data-delay="150"
    data-predelay=(tooltip_predelay if defined? tooltip_predelay)
    data-tooltip_url=tooltip_person_url(person)
  ]
    span.image-decor
      span.image-cutter
        = render 'db_entries/poster',
          db_entry: person,
          poster: person.poster,
          derivative: cover_derivative

    - if cover_title != :none
      - if cover_by == :link
        span.title[
          class=(:two_lined unless person.kind_of? RoleEntry)
          itemprop='name'
        ] = localization_span person, is_search_russian: local_assigns[:is_search_russian]

      - if person.kind_of? RoleEntry
        span.misc.centered
          span.role itemprop='jobTitle'
            = person.formatted_role

  - unless content_by == :tooltip || content_by == :none
    .content
      - if content_by == :block
        = render partial: 'characters/content',
          object: character,
          as: :character
      - else
        - raise ArgumentError, content_by
